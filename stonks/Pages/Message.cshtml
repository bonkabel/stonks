@page "{id}"
@model stonks.Pages.MessageModel
@{
}

<script>
    $(document).on("click", ".messageReportButton", function (event) {
        event.preventDefault();
        let messageId = getParent("messageContainer", event.target).id;

        $.ajax({
            type: "POST",
            url: "?handler=ReportMessage",
            data: { messageId: messageId },
            cache: false,
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            }
        })
            .done(function (result) {

                $(event.target).html("reported")
                $(event.target).removeClass("reportButton");


            })
    });

    $(document).on("click", ".messageReplyReportButton", function (event) {
        event.preventDefault();
        let messageReplyId = getParent("messageReplyContainer", event.target).id;

        $.ajax({
            type: "POST",
            url: "?handler=ReportMessageReply",
            data: { messageReplyId: messageReplyId },
            cache: false,
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            }
        })
            .done(function (result) {

                $(event.target).html("reported")
                $(event.target).removeClass("reportButton");


            })
    });
</script>

<div class="col">
    @if (Model.CurrentUser != null && (Model.CurrentUser.Id == Model.Message.SendorId.ToString() || Model.CurrentUser.Id == Model.Message.RecipientId.ToString() || Model.CurrentUser.IsAdmin)) {
        <!--Message-->
        <div class="messageContainer row lightGray mt-3 pb-2 mx-0 mb-4" id="@Model.Message.MessageId">
            <div class="col">
                <p class="postLarge">@Model.Message.Title</p>

                <a class="textSmall blackText pb-4" href="@Model.Sendor.Id">@Model.Sendor.UserName</a>

                <p class="pb-4">@Model.Message.Text</p>

                <div class="row">
                    <p class="col-7"></p>
                    <p class="col-sm-4 textSmall text-nowrap text-right">@Model.Message.Date</p>
                    <p class="messageReportButton reportButton col-sm-1 textSmall text-nowrap text-right">report</p>
                </div>
            </div>
        </div>

        <!--Replies-->
        @foreach (stonks.Models.MessageReply messageReply in Model.Replies)
        {
            <div class="messageReplyContainer row lightGray mt-3 pb-2 mx-0 mb-4" id="@messageReply.ReplyId">
                <div class="col">
                    <a class="textSmall blackText" href="/User/@Model.ReplyUsers[messageReply].Id">@Model.ReplyUsers[messageReply].UserName</a>

                    <p>@messageReply.Text</p>

                    <div class="row">
                        <p class="col-sm-11 text-nowrap text-right">@messageReply.Date</p>
                        <p class="messageReplyReportButton reportButton col-sm-1 text-nowrap text-right">report</p>
                    </div>
                </div>
            </div>
        }

        <!--Reply-->
        <div class="lightGray col py-2">
            <form method="post">
                <div asp-validation-summary="All" class="text-danger"></div>
                <span asp-validation-for="Input.Text"></span>
                <div class="form-group">
                    <label class="d-none" for="reply">Reply</label>
                    <textarea asp-for="Input.Text" rows="4" id="reply" class="form-control"></textarea>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-dark">Submit</button>
                </div>
            </form>
        </div>
    }
    

</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}